# Generated by Django 5.1.1 on 2025-02-28 08:54

import django.db.models.deletion
import slth
import slth.db.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Doenca",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", slth.db.models.CharField(max_length=255, verbose_name="Nome")),
                (
                    "cid10",
                    slth.db.models.CharField(max_length=255, verbose_name="CID10"),
                ),
            ],
            options={
                "verbose_name": "Doença",
                "verbose_name_plural": "Doenças",
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name="DoencaPreExistente",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", slth.db.models.CharField(max_length=255, verbose_name="Nome")),
            ],
            options={
                "verbose_name": "Doença Pré-Existente",
                "verbose_name_plural": "Doenças Pré-Existentes",
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name="Escolaridade",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo",
                    slth.db.models.CharField(max_length=255, verbose_name="Código"),
                ),
                ("nome", slth.db.models.CharField(max_length=255, verbose_name="Nome")),
            ],
            options={
                "verbose_name": "Escolaridade",
                "verbose_name_plural": "Escolaridades",
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name="Estado",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo",
                    slth.db.models.CharField(
                        max_length=2, unique=True, verbose_name="Código IBGE"
                    ),
                ),
                (
                    "sigla",
                    slth.db.models.CharField(
                        max_length=2, unique=True, verbose_name="Sigla"
                    ),
                ),
                (
                    "nome",
                    slth.db.models.CharField(
                        max_length=60, unique=True, verbose_name="Nome"
                    ),
                ),
            ],
            options={
                "verbose_name": "Estado",
                "verbose_name_plural": "Estados",
                "ordering": ["nome"],
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name="Funcao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", slth.db.models.CharField(max_length=255, verbose_name="Nome")),
            ],
            options={
                "verbose_name": "Função",
                "verbose_name_plural": "Funções",
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name="Ocupacao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo",
                    slth.db.models.CharField(max_length=255, verbose_name="Código"),
                ),
                ("nome", slth.db.models.CharField(max_length=255, verbose_name="Nome")),
            ],
            options={
                "verbose_name": "Ocupação",
                "verbose_name_plural": "Ocupações",
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name="Pais",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", slth.db.models.CharField(max_length=255, verbose_name="Nome")),
            ],
            options={
                "verbose_name": "País",
                "verbose_name_plural": "Países",
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name="PeriodoGestacao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo",
                    slth.db.models.CharField(max_length=255, verbose_name="Código"),
                ),
                ("nome", slth.db.models.CharField(max_length=255, verbose_name="Nome")),
            ],
            options={
                "verbose_name": "Período de Gestação",
                "verbose_name_plural": "Períodos de Gestação",
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name="Raca",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo",
                    slth.db.models.CharField(max_length=255, verbose_name="Código"),
                ),
                ("nome", slth.db.models.CharField(max_length=255, verbose_name="Nome")),
            ],
            options={
                "verbose_name": "Raça",
                "verbose_name_plural": "Raças",
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name="Sexo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo",
                    slth.db.models.CharField(max_length=255, verbose_name="Código"),
                ),
                ("nome", slth.db.models.CharField(max_length=255, verbose_name="Nome")),
            ],
            options={
                "verbose_name": "Sexo",
                "verbose_name_plural": "Sexos",
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name="SinalClinico",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", slth.db.models.CharField(max_length=255, verbose_name="Nome")),
            ],
            options={
                "verbose_name": "Sinal Clínico",
                "verbose_name_plural": "Sinais Clínicos",
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name="TipoLocal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo",
                    slth.db.models.CharField(max_length=255, verbose_name="Código"),
                ),
                ("nome", slth.db.models.CharField(max_length=255, verbose_name="Nome")),
            ],
            options={
                "verbose_name": "Tipo de Local",
                "verbose_name_plural": "Tipos de Locais",
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name="TipoNotificacao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo",
                    slth.db.models.CharField(max_length=255, verbose_name="Código"),
                ),
                ("nome", slth.db.models.CharField(max_length=255, verbose_name="Nome")),
            ],
            options={
                "verbose_name": "Tipo de Notificação",
                "verbose_name_plural": "Tipos de Notificação",
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name="Zona",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo",
                    slth.db.models.CharField(max_length=255, verbose_name="Código"),
                ),
                ("nome", slth.db.models.CharField(max_length=255, verbose_name="Nome")),
            ],
            options={
                "verbose_name": "Zona",
                "verbose_name_plural": "Zonas",
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name="Municipio",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo",
                    slth.db.models.CharField(
                        max_length=7, unique=True, verbose_name="Código IBGE"
                    ),
                ),
                ("nome", slth.db.models.CharField(max_length=60, verbose_name="Nome")),
                (
                    "estado",
                    slth.db.models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.estado",
                        verbose_name="Estado",
                    ),
                ),
            ],
            options={
                "verbose_name": "Município",
                "verbose_name_plural": "Municípios",
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name="Hospital",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", slth.db.models.CharField(max_length=255, verbose_name="Nome")),
                (
                    "codigo",
                    slth.db.models.CharField(max_length=255, verbose_name="Código"),
                ),
                (
                    "municipio",
                    slth.db.models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.municipio",
                        verbose_name="Município",
                    ),
                ),
            ],
            options={
                "verbose_name": "Hospital",
                "verbose_name_plural": "Hospitais",
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name="Notificante",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cpf", slth.db.models.CharField(max_length=255, verbose_name="CPF", blank=False)),
                ("nome", slth.db.models.CharField(max_length=255, verbose_name="Nome")),
                (
                    "funcao",
                    slth.db.models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.funcao",
                        verbose_name="Função",
                    ),
                ),
            ],
            options={
                "verbose_name": "Notificante",
                "verbose_name_plural": "Notificantes",
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name="NotificacaoSurto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "data_primeiros_sintomas",
                    models.DateField(
                        verbose_name="Data dos 1º Sintomas do 1º Caso Suspeito"
                    ),
                ),
                (
                    "numero_casos_suspeitos",
                    slth.db.models.CharField(
                        max_length=255,
                        verbose_name="Número de Casos Suspeitos/Expostos",
                    ),
                ),
                (
                    "hipotese_diagnostica_1",
                    slth.db.models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="s1",
                        to="api.doenca",
                        verbose_name="1ª Hipótese Diagnóstica",
                    ),
                ),
                (
                    "hipotese_diagnostica_2",
                    slth.db.models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="s2",
                        to="api.doenca",
                        verbose_name="1ª Hipótese Diagnóstica",
                    ),
                ),
                (
                    "tipo_local",
                    slth.db.models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.tipolocal",
                        verbose_name="Local Inicial da Ocorrência",
                    ),
                ),
            ],
            options={
                "verbose_name": "Notificação de Surto",
                "verbose_name_plural": "Notificações de Surto",
                "icon": "people-line",
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name="UnidadeSaude",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo",
                    slth.db.models.CharField(max_length=255, verbose_name="Código"),
                ),
                ("nome", slth.db.models.CharField(max_length=255, verbose_name="Nome")),
                (
                    "municipio",
                    slth.db.models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.municipio",
                        verbose_name="Município",
                    ),
                ),
                (
                    "notificantes",
                    slth.db.models.ManyToManyField(blank=True, to="api.notificante"),
                ),
            ],
            options={
                "verbose_name": "Unidade de Saúde",
                "verbose_name_plural": "Unidades de Saúde",
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name="NotificacaoIndividual",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data", models.DateField(verbose_name="Data")),
                (
                    "data_primeiros_sintomas",
                    models.DateField(verbose_name="Data dos Primeiros Sintomas"),
                ),
                (
                    "cpf",
                    slth.db.models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="CPF"
                    ),
                ),
                (
                    "cartao_sus",
                    slth.db.models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Cartão SUS"
                    ),
                ),
                ("nome", slth.db.models.CharField(max_length=255, verbose_name="Nome")),
                (
                    "data_nascimento",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de Nascimento"
                    ),
                ),
                (
                    "idade",
                    slth.db.models.IntegerField(
                        blank=True, null=True, verbose_name="Idade"
                    ),
                ),
                (
                    "nome_mae",
                    slth.db.models.CharField(
                        max_length=255, verbose_name="Nome da Mãe"
                    ),
                ),
                (
                    "cep",
                    slth.db.models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="CEP"
                    ),
                ),
                (
                    "distrito",
                    slth.db.models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Distrito"
                    ),
                ),
                (
                    "bairro",
                    slth.db.models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Bairro"
                    ),
                ),
                (
                    "logradouro",
                    slth.db.models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Logradouro"
                    ),
                ),
                (
                    "codigo_logradouro",
                    slth.db.models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Código do Logradouro",
                    ),
                ),
                (
                    "numero_residencia",
                    slth.db.models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Número da Residência",
                    ),
                ),
                (
                    "complemento",
                    slth.db.models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Complemento",
                    ),
                ),
                (
                    "latitude",
                    slth.db.models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Latitude"
                    ),
                ),
                (
                    "longitude",
                    slth.db.models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Longitude"
                    ),
                ),
                (
                    "referencia",
                    slth.db.models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Ponto de Referência",
                    ),
                ),
                (
                    "data_investigacao",
                    models.DateField(verbose_name="Data da Investigação"),
                ),
                (
                    "data_primeira_amostra_chikungunya",
                    models.DateField(
                        blank=True, null=True, verbose_name="Coleta da 1ª Amostra"
                    ),
                ),
                (
                    "resultado_primeira_amostra_chikungunya",
                    slth.db.models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Reagente"),
                            (2, "Não Reagente"),
                            (3, "Inconclusivo"),
                            (4, "Não Realizado"),
                        ],
                        null=True,
                        verbose_name="Resultado da 1ª Amostra",
                    ),
                ),
                (
                    "data_segunda_amostra_chikungunya",
                    models.DateField(
                        blank=True, null=True, verbose_name="Coleta da 2ª Amostra"
                    ),
                ),
                (
                    "resultado_segunda_amostra_chikungunya",
                    slth.db.models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Reagente"),
                            (2, "Não Reagente"),
                            (3, "Inconclusivo"),
                            (4, "Não Realizado"),
                        ],
                        null=True,
                        verbose_name="Resultado da 2ª Amostra",
                    ),
                ),
                (
                    "data_coleta_exame_prnt",
                    models.DateField(
                        blank=True, null=True, verbose_name="Coleta Exame PRNT"
                    ),
                ),
                (
                    "resultado_exame_prnt",
                    slth.db.models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Reagente"),
                            (2, "Não Reagente"),
                            (3, "Inconclusivo"),
                            (4, "Não Realizado"),
                        ],
                        null=True,
                        verbose_name="Resultado do Exame PRNT",
                    ),
                ),
                (
                    "data_amostra_dengue",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data da Coleta"
                    ),
                ),
                (
                    "resultado_amostra_dengue",
                    slth.db.models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Positivo"),
                            (2, "Negativo"),
                            (3, "Inconclusivo"),
                            (4, "Não Realizado"),
                        ],
                        null=True,
                        verbose_name="Resultado Coleta",
                    ),
                ),
                (
                    "data_exame_ns1",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data Exame NS1"
                    ),
                ),
                (
                    "resultado_exame_ns1",
                    slth.db.models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Positivo"),
                            (2, "Negativo"),
                            (3, "Inconclusivo"),
                            (4, "Não Realizado"),
                        ],
                        null=True,
                        verbose_name="Resultado Exame NS1",
                    ),
                ),
                (
                    "data_isolamento",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data da Coleta Isolamento"
                    ),
                ),
                (
                    "resultado_isolamento",
                    slth.db.models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Positivo"),
                            (2, "Negativo"),
                            (3, "Inconclusivo"),
                            (4, "Não Realizado"),
                        ],
                        null=True,
                        verbose_name="Resultado Isolamento",
                    ),
                ),
                (
                    "data_rt_pcr",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data da Coleta RT-PCR"
                    ),
                ),
                (
                    "resultado_rt_pcr",
                    slth.db.models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Positivo"),
                            (2, "Negativo"),
                            (3, "Inconclusivo"),
                            (4, "Não Realizado"),
                        ],
                        null=True,
                        verbose_name="Resultado RT-PCR",
                    ),
                ),
                (
                    "sorotipo",
                    slth.db.models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "DENV 1"),
                            (2, "DENV 2"),
                            (3, "DENV 3"),
                            (4, "DENV 4"),
                        ],
                        null=True,
                        verbose_name="Sorotipo",
                    ),
                ),
                (
                    "histopatologia",
                    slth.db.models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Compatível"),
                            (2, "Incompatível"),
                            (3, "Inconclusivo"),
                            (4, "Não realizado"),
                        ],
                        null=True,
                        verbose_name="Histopatologia",
                    ),
                ),
                (
                    "imunohistoquímica",
                    slth.db.models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Positivo"),
                            (2, "Negativo"),
                            (3, "Inconclusivo"),
                            (4, "Não Realizado"),
                        ],
                        null=True,
                        verbose_name="Imunohistoquímica",
                    ),
                ),
                (
                    "vacinado",
                    models.BooleanField(
                        null=True, verbose_name="Vacinado contra Doença"
                    ),
                ),
                (
                    "data_ultima_vacina",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data da Última Vacinação"
                    ),
                ),
                (
                    "hospitalizacao",
                    models.BooleanField(
                        null=True, verbose_name="Ocorreu Hospitalização"
                    ),
                ),
                (
                    "data_hospitalizacao",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data da Hospitalização"
                    ),
                ),
                (
                    "distrito_infeccao",
                    slth.db.models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Distrito da Infecção",
                    ),
                ),
                (
                    "bairro_infeccao",
                    slth.db.models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Bairro da Infecção",
                    ),
                ),
                (
                    "validada",
                    models.BooleanField(blank=True, null=True, verbose_name="Validada"),
                ),
                (
                    "observacao",
                    slth.db.models.TextField(
                        blank=True, null=True, verbose_name="Observação"
                    ),
                ),
                (
                    "doenca",
                    slth.db.models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.doenca",
                        verbose_name="Doença",
                    ),
                ),
                (
                    "doencas_pre_existentes",
                    slth.db.models.ManyToManyField(
                        blank=True,
                        to="api.doencapreexistente",
                        verbose_name="Doenças Pré-Existentes",
                    ),
                ),
                (
                    "escolaridade",
                    slth.db.models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.escolaridade",
                        verbose_name="Escolaridade",
                    ),
                ),
                (
                    "hospital",
                    slth.db.models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.hospital",
                        verbose_name="Hospital",
                    ),
                ),
                (
                    "municipio",
                    slth.db.models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="s1",
                        to="api.municipio",
                        verbose_name="Município",
                    ),
                ),
                (
                    "municipio_infeccao",
                    slth.db.models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="s3",
                        to="api.municipio",
                        verbose_name="Município da Infecção",
                    ),
                ),
                (
                    "municipio_residencia",
                    slth.db.models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="s2",
                        to="api.municipio",
                        verbose_name="Município da Residência",
                    ),
                ),
                (
                    "notificante",
                    slth.db.models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.notificante",
                        verbose_name="Notificante",
                    ),
                ),
                (
                    "ocupacao_investigacao",
                    slth.db.models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.ocupacao",
                        verbose_name="Ocupação",
                    ),
                ),
                (
                    "pais",
                    slth.db.models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="s1",
                        to="api.pais",
                        verbose_name="País",
                    ),
                ),
                (
                    "pais_infeccao",
                    slth.db.models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="s2",
                        to="api.pais",
                        verbose_name="País da Infecção",
                    ),
                ),
                (
                    "periodo_gestacao",
                    slth.db.models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.periodogestacao",
                        verbose_name="Período de Gestação",
                    ),
                ),
                (
                    "raca",
                    slth.db.models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.raca",
                        verbose_name="Raça",
                    ),
                ),
                (
                    "sexo",
                    slth.db.models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.sexo",
                        verbose_name="Sexo",
                    ),
                ),
                (
                    "sinais_clinicos",
                    slth.db.models.ManyToManyField(
                        blank=True,
                        to="api.sinalclinico",
                        verbose_name="Sinais Clínicos",
                    ),
                ),
                (
                    "unidade",
                    slth.db.models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.unidadesaude",
                        verbose_name="Unidade de Saúde",
                    ),
                ),
            ],
            options={
                "verbose_name": "Notificação Individual",
                "verbose_name_plural": "Notificações Individuais",
                "icon": "person",
            },
            bases=(models.Model, slth.ModelMixin),
        ),
    ]
